import streamlit as st
from checklist.db import SessionLocal
from checklist.models import User, Position, Checklist 
from sqlalchemy.exc import IntegrityError

def employees_tab(company_id):
    db = SessionLocal()
    st.subheader("–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∏ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏")
    
    sub_tabs = st.tabs(["–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏", "–î–æ–ª–∂–Ω–æ—Å—Ç–∏"])
    
    with sub_tabs[0]:

        st.subheader("–°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")
        users = db.query(User).filter_by(company_id=company_id, role="employee").all()

        # –ü–æ–¥–≥—Ä—É–∂–∞–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏
        positions = db.query(Position).filter_by(company_id=company_id).all()
        # –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ ‚Äî –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–±–∞–≤–∏—Ç—å
        if not positions:
            st.warning("–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤!")
            db.close()
            return
        position_options = {p.name: p.id for p in positions}

        if users:
            for user in users:
                col1, col2 = st.columns([3, 1])
                with col1:
                    # –ù–∞—Ö–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –ø–æ id (–∏–ª–∏ –ø–∏—à–µ–º "–ù–µ —É–∫–∞–∑–∞–Ω–∞")
                    pos_name = next((p.name for p in positions if p.id == user.position_id), "–ù–µ —É–∫–∞–∑–∞–Ω–∞")
                    st.write(f"üë§ {user.name} ({user.phone}) ‚Äî {pos_name}")
                with col2:
                    edit_btn = st.button("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", key=f"edit_{user.id}")

                if st.session_state.get(f"edit_mode_{user.id}", False) or edit_btn:
                    st.session_state[f"edit_mode_{user.id}"] = True
                    with st.expander(f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äî {user.name}", expanded=True):
                        new_name = st.text_input("–§–ò–û", value=user.name, key=f"name_{user.id}")
                        new_phone = st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω (+7...)", value=user.phone or "", key=f"phone_{user.id}")

                        # –í–´–ü–ê–î–ê–Æ–©–ò–ô –°–ü–†–ê–í–û–ß–ù–ò–ö –î–û–õ–ñ–ù–û–°–¢–ï–ô
                        pos_names = list(position_options.keys())
                        pos_ids = list(position_options.values())
                        # –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏:
                        curr_idx = pos_ids.index(user.position_id) if user.position_id in pos_ids else 0
                        selected_pos_name = st.selectbox(
                            "–î–æ–ª–∂–Ω–æ—Å—Ç—å",
                            options=pos_names,
                            index=curr_idx,
                            key=f"pos_{user.id}"
                        )
                        position_id = position_options[selected_pos_name]

                        save = st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", key=f"save_{user.id}")
                        cancel = st.button("‚ùå –û—Ç–º–µ–Ω–∞", key=f"cancel_{user.id}")

                        if save:
                            user.name = new_name
                            user.phone = new_phone
                            user.position_id = position_id
                            try:
                                db.commit()
                                st.success("–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
                                st.session_state[f"edit_mode_{user.id}"] = False
                                st.rerun()
                            except IntegrityError as e:
                                db.rollback()
                                st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏")
                                st.exception(e)
                        if cancel:
                            st.session_state[f"edit_mode_{user.id}"] = False
                            st.rerun()
        else:
            st.info("–°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.")
        # ‚Äî‚Äî‚Äî –ü–æ–¥–≤–∫–ª–∞–¥–∫–∞ 2 ‚Äî –î–æ–ª–∂–Ω–æ—Å—Ç–∏
    with sub_tabs[1]:
        st.markdown("### –î–æ–ª–∂–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–∞–Ω–∏–∏")
        positions = db.query(Position).filter_by(company_id=company_id).all()
        checklists = db.query(Checklist).filter_by(company_id=company_id).all()

        if positions:
            for pos in positions:
                col1, col2 = st.columns([3, 1])
                with col1:
                    st.write(f"‚Äì {pos.name}")
                with col2:
                    edit_btn = st.button("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", key=f"edit_pos_{pos.id}")

                # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ + —á–µ–∫-–ª–∏—Å—Ç—ã
                if st.session_state.get(f"edit_mode_pos_{pos.id}", False) or edit_btn:
                    st.session_state[f"edit_mode_pos_{pos.id}"] = True
                    with st.expander(f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äî {pos.name}", expanded=True):
                        new_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏", value=pos.name, key=f"pos_name_{pos.id}")

                        # –°–ø–∏—Å–æ–∫ —á–µ–∫-–ª–∏—Å—Ç–æ–≤ (–Ω–∞–∑–≤–∞–Ω–∏—è/id)
                        checklist_options = {cl.name: cl.id for cl in checklists}
                        selected_names = st.multiselect(
                            "–î–æ—Å—Ç—É–ø–Ω—ã–µ —á–µ–∫-–ª–∏—Å—Ç—ã",
                            options=list(checklist_options.keys()),
                            default=[cl.name for cl in pos.checklists],
                            key=f"checklists_{pos.id}"
                        )
                        selected_ids = [checklist_options[name] for name in selected_names]

                        col_save, col_cancel = st.columns(2)
                        with col_save:
                            if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", key=f"save_pos_{pos.id}"):
                                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è
                                pos.name = new_name
                                # –ü—Ä–∏–≤—è–∑–∫–∞ —á–µ–∫-–ª–∏—Å—Ç–æ–≤
                                pos.checklists = [cl for cl in checklists if cl.id in selected_ids]
                                try:
                                    db.commit()
                                    st.success("–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
                                    st.session_state[f"edit_mode_pos_{pos.id}"] = False
                                    st.rerun()
                                except IntegrityError as e:
                                    db.rollback()
                                    st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏")
                                    st.exception(e)
                        with col_cancel:
                            if st.button("‚ùå –û—Ç–º–µ–Ω–∞", key=f"cancel_pos_{pos.id}"):
                                st.session_state[f"edit_mode_pos_{pos.id}"] = False
                                st.rerun()
        else:
            st.info("–ü–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏.")

        st.markdown("---")
        st.subheader("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –¥–æ–ª–∂–Ω–æ—Å—Ç—å")
        with st.form("add_position_form"):
            new_pos_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏")
            submit_pos = st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å")
            if submit_pos:
                if not new_pos_name:
                    st.error("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏")
                elif db.query(Position).filter_by(name=new_pos_name, company_id=company_id).first():
                    st.warning("–¢–∞–∫–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
                else:
                    db.add(Position(name=new_pos_name, company_id=company_id))
                    db.commit()
                    st.success("–î–æ–ª–∂–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∞")
                    st.rerun()