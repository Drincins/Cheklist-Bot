import os
import streamlit as st
from dotenv import load_dotenv
from checklist.db.db import SessionLocal, init_db
from checklist.db.models import User, Company, Position, Role
from checklist.admcompany.main import company_admin_dashboard
from checklist.superadmintab import main_superadmin
import bcrypt
from sqlalchemy.orm import joinedload

# ‚Äî‚Äî‚Äî cookies
from streamlit_cookies_manager import CookieManager, EncryptedCookieManager

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ .env –∏ –ë–î
load_dotenv()
SA_LOGIN = os.getenv("SUPERADMIN_LOGIN")
SA_PASS = os.getenv("SUPERADMIN_PASSWORD")
init_db()

# ‚Äî‚Äî‚Äî –ù–∞—Å—Ç—Ä–æ–π–∫–∞ cookies (–≤—ã–±–µ—Ä–∏ —Å–≤–æ—é —Å–µ–∫—Ä–µ—Ç–Ω—É—é —Å—Ç—Ä–æ–∫—É)
cookies = EncryptedCookieManager(
    prefix="checklist_", password="SECRET_COOKIE_PASSWORD_2024"
)
if not cookies.ready():
    st.stop()

# ‚Äî‚Äî‚Äî –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏–∑ cookies
if 'auth' not in st.session_state:
    st.session_state.auth = cookies.get('auth') == '1'
    st.session_state.is_company_admin = cookies.get('is_company_admin') == '1'
    st.session_state.is_superadmin = cookies.get('is_superadmin') == '1'
    st.session_state.admin_company_id = (
        int(cookies.get('admin_company_id')) if cookies.get('admin_company_id') and cookies.get('admin_company_id').isdigit() else None
    )

def logout_button():
    if st.button("üîí –í—ã–π—Ç–∏"):
        st.session_state.auth = False
        st.session_state.is_company_admin = False
        st.session_state.is_superadmin = False
        st.session_state.admin_company_id = None
        # –û—á–∏—â–∞–µ–º cookies:
        cookies['auth'] = '0'
        cookies['is_superadmin'] = '0'
        cookies['is_company_admin'] = '0'
        cookies['admin_company_id'] = ''
        cookies.save()
        st.rerun()

# ‚Äî‚Äî‚Äî –ï–¥–∏–Ω–∞—è —Ñ–æ—Ä–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ cookies)
if not st.session_state.auth:
    st.sidebar.title("–í—Ö–æ–¥")
    login = st.sidebar.text_input("–õ–æ–≥–∏–Ω")
    pwd = st.sidebar.text_input("–ü–∞—Ä–æ–ª—å", type="password")
    if st.sidebar.button("–í–æ–π—Ç–∏"):
        # –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω (–∂—ë—Å—Ç–∫–æ –ø—Ä–æ–ø–∏—Å–∞–Ω–Ω—ã–π):
        if login == SA_LOGIN and pwd == SA_PASS:
            st.session_state.auth = True
            st.session_state.is_superadmin = True
            st.session_state.is_company_admin = False
            st.session_state.admin_company_id = None
            st.session_state.user_name = "–ñ–¥–∞–Ω–æ–≤ –ê–Ω–¥—Ä–µ–π"
            st.session_state.user_role = "–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
            cookies['auth'] = '1'
            cookies['is_superadmin'] = '1'
            cookies['is_company_admin'] = '0'
            cookies['admin_company_id'] = ''
            cookies.save()
            st.rerun()
        else:
            db = SessionLocal()
            user = db.query(User).options(
                joinedload(User.position).joinedload(Position.role)
            ).filter_by(login=login).first()

            if user and bcrypt.checkpw(pwd.encode(), user.hashed_password.encode()):
                role_name = user.position.role.name if user.position and user.position.role else "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
                is_main_admin = (role_name == "–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
                st.session_state.auth = True
                st.session_state.is_superadmin = False
                st.session_state.is_company_admin = is_main_admin
                st.session_state.admin_company_id = user.company_id
                st.session_state.user_name = user.name
                st.session_state.user_role = role_name
                cookies['auth'] = '1'
                cookies['is_superadmin'] = '0'
                cookies['is_company_admin'] = '1' if is_main_admin else '0'
                cookies['admin_company_id'] = str(user.company_id)
                cookies.save()
                st.rerun()
            else:
                st.sidebar.error("–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å")

else:
    if st.session_state.is_superadmin:
        main_superadmin()
        logout_button()
    elif st.session_state.is_company_admin:
        company_admin_dashboard(st.session_state.admin_company_id)
        logout_button()
