# bot/utils/checklist_mode.py
from typing import List

def chunk_text(s: str, limit: int = 3500) -> List[str]:
    """–†–∞–∑–±–∏–≤–∞–µ—Ç –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —á–∞—Å—Ç–∏, —á—Ç–æ–±—ã Telegram –Ω–µ —Ä—É–≥–∞–ª—Å—è –Ω–∞ –ª–∏–º–∏—Ç 4096 —Å–∏–º–≤–æ–ª–æ–≤."""
    parts = []
    while s:
        if len(s) <= limit:
            parts.append(s)
            break
        cut = s.rfind("\n\n", 0, limit)
        if cut == -1:
            cut = s.rfind("\n", 0, limit)
        if cut == -1:
            cut = limit
        parts.append(s[:cut])
        s = s[cut:].lstrip()
    return parts

def render_full_checklist(questions: list[dict]) -> str:
    """–°–æ–±–∏—Ä–∞–µ–º –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –æ–¥–∏–Ω —Ç–µ–∫—Å—Ç (–±–µ–∑ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –ë–î –∏–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—é)."""
    lines = ["üìú *–ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤*\n"]
    for i, q in enumerate(questions, start=1):
        qtype = q.get("type") or q.get("question_type") or "text"
        if qtype in ("yes_no", "yesno"):
            kind = "–î–∞/–ù–µ—Ç"
        elif qtype == "scale":
            kind = "–®–∫–∞–ª–∞ 1‚Äì5"
        else:
            kind = "–¢–µ–∫—Å—Ç"
        title = (q.get("text") or q.get("question_text") or "").strip() or f"–í–æ–ø—Ä–æ—Å #{i}"
        lines.append(f"*{i}.* {title}\n_–¢–∏–ø:_ {kind}\n")
    return "\n".join(lines)
